# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gvtnAbMRkRSrBV0idCjjmvddhZDmKECT
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
import pandas as pd

model = tf.keras.models.load_model('plant_disease_multiclass_model.h5')

class_names = [
    "Apple Scab", "Apple Black Rot", "Apple Cedar Rust", "Cherry Powdery Mildew",
    "Corn Gray Leaf Spot", "Corn Common Rust", "Corn Northern Leaf Blight",
    "Grape Black Rot", "Grape Black Measles", "Grape Leaf Blight",
    "Orange Greening", "Peach Bacterial Spot", "Pepper Bacterial Spot",
    "Potato Early Blight", "Potato Late Blight", "Squash Powdery Mildew",
    "Strawberry Leaf Scorch", "Tomato Bacterial Spot", "Tomato Early Blight",
    "Tomato Late Blight", "Tomato Leaf Mold", "Tomato Septoria Spot",
    "Tomato Spider Mites", "Tomato Target Spot", "Tomato Yellow Curl Virus",
    "Tomato Mosaic Virus", "Healthy"
]

st.title("🌿 Plant Disease Detection App (Multilingual)")
st.write("Upload multiple leaf images 📷 and detect diseases! 🌎")

language = st.selectbox("🌐 Choose Language:", ["English", "Malayalam", "Spanish"])

uploaded_files = st.file_uploader("📷 Upload Multiple Leaf Images", type=["jpg", "png", "jpeg"], accept_multiple_files=True)

if st.button("🔎 Predict Diseases"):
    if uploaded_files:
        results = []

        with st.spinner('🔍 Detecting diseases... Please wait!'):
            for uploaded_file in uploaded_files:
                img = Image.open(uploaded_file)
                img = img.resize((128, 128))
                img_array = np.array(img) / 255.0
                img_array = img_array.reshape((1, 128, 128, 3))

                predictions = model.predict(img_array)
                predicted_class = class_names[np.argmax(predictions)]

                if language == "Malayalam":
                    translated = predicted_class
                elif language == "Spanish":
                    translated = predicted_class
                else:
                    translated = predicted_class

                st.image(img, caption=f"Predicted: {translated}", use_column_width=True)

                results.append({
                    "Image Name": uploaded_file.name,
                    "Prediction": translated
                })

        results_df = pd.DataFrame(results)

        csv = results_df.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="📥 Download Prediction Report",
            data=csv,
            file_name='plant_disease_predictions.csv',
            mime='text/csv',
        )
    else:
        st.warning("⚠️ Please upload at least one image first!")